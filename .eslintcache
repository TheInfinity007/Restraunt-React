[{"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\MenuComponent.js":"1","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\shared\\dishes.js":"2","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\DishDetailComponent.js":"3","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\index.js":"4","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\reportWebVitals.js":"5","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\MainComponent.js":"6","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\HeaderComponent.js":"7","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\FooterComponent.js":"8","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\App.js":"9","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\shared\\promotions.js":"12","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\shared\\comments.js":"13","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\AboutComponent.js":"14"},{"size":1636,"mtime":1606827549058,"results":"15","hashOfConfig":"16"},{"size":1618,"mtime":1606824030775,"results":"17","hashOfConfig":"16"},{"size":1712,"mtime":1606827345351,"results":"18","hashOfConfig":"16"},{"size":650,"mtime":1606751473346,"results":"19","hashOfConfig":"16"},{"size":362,"mtime":1606570990135,"results":"20","hashOfConfig":"16"},{"size":2121,"mtime":1606841622029,"results":"21","hashOfConfig":"16"},{"size":5210,"mtime":1606906725741,"results":"22","hashOfConfig":"16"},{"size":2672,"mtime":1606751680221,"results":"23","hashOfConfig":"16"},{"size":350,"mtime":1606749013377,"results":"24","hashOfConfig":"16"},{"size":885,"mtime":1606825291015,"results":"25","hashOfConfig":"16"},{"size":9600,"mtime":1606848073270,"results":"26","hashOfConfig":"16"},{"size":437,"mtime":1606824146040,"results":"27","hashOfConfig":"16"},{"size":4279,"mtime":1606824296113,"results":"28","hashOfConfig":"16"},{"size":4190,"mtime":1606842797538,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2lsr2t",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\MenuComponent.js",[],["62","63"],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\DishDetailComponent.js",[],["64","65"],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\index.js",[],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\MainComponent.js",["66"],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\App.js",[],["67","68"],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\ContactComponent.js",["69"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event){\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked: target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event){\r\n        console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n        alert(JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email){\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if(this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if(this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if(this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if(this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if(this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email &&  email.split('').filter(x => x ==='@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    render(){\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\"name=\"firstname\" placeholder=\"First Name\" value={this.state.firstname} onChange={this.handleInputChange} onBlur={this.handleBlur('firstname')} valid={errors.firstname==='' && this.state.firstname.length > 0} invalid={errors.firstname !== ''}/>\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\"name=\"lastname\" placeholder=\"Last Name\" value={this.state.lastname} onChange={this.handleInputChange} onBlur={this.handleBlur('lastname')} valid={errors.lastname==='' && this.state.lastname.length > 0} invalid={errors.lastname !== ''} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\"name=\"telnum\" placeholder=\"Tel. Number\" value={this.state.telnum} onChange={this.handleInputChange} onBlur={this.handleBlur('telnum')}  valid={errors.telnum==='' && this.state.telnum.length > 0} invalid={errors.telnum !== ''} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\"name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange} onBlur={this.handleBlur('email')}  valid={errors.email==='' && this.state.email.length > 0} invalid={errors.email !== ''}/>\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset:2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} onChange={this.handleInputChange} /> {''}<strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset:1}}>\r\n                                    <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange}>                                \r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\"name=\"message\" rows=\"12\" value={this.state.message} onChange={this.handleInputChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\RAM\\Desktop\\FS Web Dev With React\\react\\confusion\\src\\components\\AboutComponent.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"74"},{"ruleId":"72","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":52,"column":54,"nodeType":"78","endLine":54,"endColumn":11},{"ruleId":"70","replacedBy":"79"},{"ruleId":"72","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":115,"column":29,"nodeType":"83","endLine":115,"endColumn":71},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal",["84"],["85"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]